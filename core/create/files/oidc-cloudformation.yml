AWSTemplateFormatVersion: "2010-09-09"

Description: CircleCI OIDC nested stack role and policy

Parameters:
  SystemCode:
    Type: String
    Description: The System Code of the deployment job.
  CircleciProjectId:
    Type: String
    Description: Get your project ID from your CircleCI project settings page.
  CircleciOrgName:
    Type: String
    Description: CircleCI org name. Leave as default unless you're not using the Financial-Times GitHub / CircleCI org.

Resources:
  CircleciOidcNestedStackRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://circleci-nested-stack-template-bucket.s3.eu-west-1.amazonaws.com/circleci-nested-stack-role.yaml
      Parameters:
        SystemCode: !Ref SystemCode
        CircleciProjectId: !Ref CircleciProjectId
        CircleciOrgName: !Ref CircleciOrgName

  CircleciOIDCRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub CircleCI-policy-${SystemCode}
      Roles:
        - Fn::GetAtt: [CircleciOidcNestedStackRole, Outputs.CircleciOidcRole]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudformationStackActions
            Effect: Allow
            Action:
              - cloudformation:CreateStack
              - cloudformation:UpdateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackResource
              - cloudformation:DescribeStackResources
              - cloudformation:ListStackResources
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
            Resource:
              - !Sub arn:aws:cloudformation:*:${AWS::AccountId}:stack/${SystemCode}*
              - !Sub arn:aws:cloudformation:*:${AWS::AccountId}:stack/${SystemCode}*/*
          - Sid: AllowCloudformationActions
            Effect: Allow
            Action:
              - cloudformation:CreateUploadBucket
              - cloudformation:ValidateTemplate
            Resource: "*"
          - Sid: AllowRoleManagementActionsWithPermissionsBoundary
            Effect: Allow
            Action:
              - iam:CreateRole
              - iam:AttachRolePolicy
              - iam:DetachRolePolicy
              - iam:PutRolePolicy
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/${SystemCode}*-lambdaRole # serverless framework uses lambdaRole suffix
            Condition:
              StringEquals:
                iam:PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/FT-Permissions-Boundary-For-Systems
          - Sid: AllowRoleManagementActions
            Effect: Allow
            Action:
              - iam:GetRole
              - iam:PassRole
              - iam:DeleteRolePolicy
              - iam:DeleteRole
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/${SystemCode}*-lambdaRole
          - Sid: AllowCloudWatchLogsActions
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DeleteLogGroup
              - logs:DeleteLogStream
              - logs:DescribeLogStreams
              - logs:FilterLogEvents
              - logs:DescribeLogGroups
            Resource:
              - !Sub arn:aws:logs:*:${AWS::AccountId}:log-group*
          - Sid: AllowLambdaManagementActions
            Effect: Allow
            Action:
              - lambda:GetFunction
              - lambda:CreateFunction
              - lambda:DeleteFunction
              - lambda:UpdateFunctionConfiguration
              - lambda:UpdateFunctionCode
              - lambda:InvokeFunction
              - lambda:ListVersionsByFunction
              - lambda:PublishVersion
              - lambda:CreateAlias
              - lambda:DeleteAlias
              - lambda:UpdateAlias
              - lambda:GetFunctionConfiguration
              - lambda:AddPermission
              - lambda:RemovePermission
              - lambda:TagResource
              - lambda:ListTags
              - lambda:UntagResource
              - lambda:PutFunctionConcurrency
            Resource:
              - !Sub arn:aws:lambda:*:${AWS::AccountId}:function:${SystemCode}-*
          - Sid: AllowS3ActionsForDeploymentBucket
            Effect: Allow
            Action:
              - s3:*
            Resource:
              - arn:aws:s3:::*serverlessdeploymentbuck*
