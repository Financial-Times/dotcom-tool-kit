version: 2.1

orbs:
  orb-tools: circleci/orb-tools@10.0.5

references:

  #
  # Workspace
  #
  container_config_node: &container_config_node
    working_directory: ~/project/build
    docker:
      - image: circleci/node:12

  workspace_root: &workspace_root
    ~/project

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  #
  # Cache creation
  #
  create_cache: &create_cache
    save_cache:
      key: cache-v1-{{ .Branch }}-{{ checksum "./package.json" }}
      paths:
        - ./node_modules/

  #
  # Cache restoration
  #
  restore_cache: &restore_cache
    restore_cache:
      keys:
        - cache-v1-{{ .Branch }}-{{ checksum "./package.json" }}

  #
  # Filters
  #
  filters_only_main: &filters_only_main
    branches:
      only:
        - main

  filters_only_renovate_nori: &filters_only_renovate_nori
    branches:
      only: /(^renovate-.*|^nori\/.*)/

  filters_ignore_tags_renovate_nori_build: &filters_ignore_tags_renovate_nori_build
    tags:
      ignore: /.*/
    branches:
      ignore: /(^renovate-.*|^nori\/.*|^gh-pages)/

  filters_main_branch: &filters_main_branch
    branches:
      only:
        - main

  filters_release_build: &filters_release_build
    tags:
      only:
        - /^v\d+\.\d+\.\d+(?:-\w+\.\d+)?$/
    branches:
      ignore: /.*/

# Pipeline Parameters
## These parameters are used internally by orb-tools. Skip to the Jobs section.
parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow" job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"

jobs:

  build:
    <<: *container_config_node
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Install project dependencies
          command: npm install
      - run:
          name: Compile packages
          command: npm run build
      - *create_cache
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  test:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Run package tests
          command: npm run test

  publish:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Set npm auth token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ${HOME}/.npmrc
      - run:
          name: Bump version
          command: npx athloi version ${CIRCLE_TAG}
      - run:
          name: NPM publish
          command: npx athloi publish -- --access=public

workflows:
  version: 2

  build-test:
    jobs:
      - build:
          filters:
            <<: *filters_ignore_tags_renovate_nori_build
      - test:
          requires:
            - build

  renovate-nori-build-test:
    jobs:
      - waiting-for-approval:
          type: approval
          filters:
              <<: *filters_only_renovate_nori
      - build:
          requires:
              - waiting-for-approval
      - test:
          requires:
              - build

  build-test-publish:
    jobs:
      - build:
          filters:
            <<: *filters_release_build
      - test:
          filters:
            <<: *filters_release_build
          requires:
            - build
      - publish:
          filters:
            <<: *filters_release_build
          requires:
            - test

  # Prior to producing a development orb (which requires credentials) basic validation, linting, and even unit testing can be performed.
  # This workflow will run on every commit
  orb-test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint: # Lint Yaml files
          lint-dir: orb
      - orb-tools/pack: # Pack orb source
          source-dir: orb/src
      # Publish development version(s) of the orb.
      - orb-tools/publish-dev:
          orb-name: financial-times/dotcom-tool-kit
          requires:
            - orb-tools/lint
            - orb-tools/pack
      # Trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          requires:
            - orb-tools/publish-dev

  # This `orb-integration-test_deploy` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  orb-integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # Run any integration tests defined within the `jobs` key.
      # - integration-test-1
      # Publish a semver version of the orb. relies on
      # the commit subject containing the text "[semver:patch|minor|major|skip]"
      # as that will determine whether a patch, minor or major
      # version will be published or if publishing should
      # be skipped.
      # e.g. [semver:patch] will cause a patch version to be published.
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: financial-times/dotcom-tool-kit
          add-pr-comment: false
          fail-if-semver-not-indicated: true
          publish-version-tag: false
          # requires:
          #   - integration-test-1
          filters:
            branches:
              only:
                - main
