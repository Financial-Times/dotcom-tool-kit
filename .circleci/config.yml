version: 2.1

orbs:
  node: circleci/node@4.6.0
  orb-tools: circleci/orb-tools@10.0.5

references:
  #
  # Workspace
  #
  container_config_node:
    &container_config_node
    working_directory: ~/project/build
    docker:
      - image: cimg/node:12.22

  workspace_root: &workspace_root ~/project

  attach_workspace:
    &attach_workspace
    attach_workspace:
      at: *workspace_root

  # Cache creation
  #
  create_cache:
    &create_cache
    save_cache:
      key: cache-v1-{{ .Branch }}-{{ checksum "./package.json" }}
      paths:
        - ./node_modules/

  # Cache restoration
  #
  restore_cache:
    &restore_cache
    restore_cache:
      keys:
        - cache-v1-{{ .Branch }}-{{ checksum "./package.json" }}

  # Filters
  #
  filters_only_main:
    &filters_only_main
    branches:
      only:
        - main

  filters_only_renovate_nori:
    &filters_only_renovate_nori
    branches:
      only: /(^renovate-.*|^nori\/.*)/

  filters_ignore_tags_renovate_nori_build:
    &filters_ignore_tags_renovate_nori_build
    tags:
      ignore: /.*/
    branches:
      ignore: /(^renovate-.*|^nori\/.*|^gh-pages)/

  filters_main_branch:
    &filters_main_branch
    branches:
      only:
        - main

  filters_release_build:
    &filters_release_build
    tags:
      only:
        - /^v\d+\.\d+\.\d+$/
    branches:
      ignore: /.*/

  filters_prerelease_build:
    &filters_prerelease_build
    tags:
      only:
        - /^v\d+\.\d+\.\d+(?:-\w+\.\d+)$/
    branches:
      ignore: /.*/

  filters_orbs_release_build:
    &filters_orbs_release_build
    tags:
      only:
        # CircleCI doesn't allow prerelease versions to be published
        - /^v\d+\.\d+\.\d+$/
    branches:
      ignore: /.*/

jobs:
  build:
    <<: *container_config_node
    steps:
      - checkout
      - *restore_cache
      - node/install-npm:
          version: '7'
      - run:
          name: Install project dependencies
          command: npm install
      - run:
          name: Compile packages
          command: npm run build
      - *create_cache
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  lint:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Run ESLint
          command: npm run lint

  test:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Run package tests
          command: npm run test

  publish:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Set npm auth token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >
            ${HOME}/.npmrc
      - run:
          name: Bump version
          command: npx athloi version ${CIRCLE_TAG}
      - run:
          name: NPM publish
          command: npx athloi publish -- --access=public

  prepublish:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Set npm auth token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >
            ${HOME}/.npmrc
      - run:
          name: Bump version
          command: npx athloi version ${CIRCLE_TAG}
      - run:
          name: NPM publish
          command: npx athloi publish -- --access=public --tag=prerelease

workflows:
  version: 2

  build-test:
    jobs:
      - build:
          filters:
            <<: *filters_ignore_tags_renovate_nori_build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build

  renovate-nori-build-test:
    jobs:
      - waiting-for-approval:
          type: approval
          filters:
            <<: *filters_only_renovate_nori
      - build:
          requires:
            - waiting-for-approval
      - test:
          requires:
            - build
      - lint:
          requires:
            - build

  build-test-publish:
    jobs:
      - build:
          filters:
            <<: *filters_release_build
      - test:
          filters:
            <<: *filters_release_build
          requires:
            - build
      - lint:
          filters:
            <<: *filters_release_build
          requires:
            - build
      - publish:
          context:
            - npm-publish-token
            - npm-publish-token
          filters:
            <<: *filters_release_build
          requires:
            - lint
            - test

  build-test-prepublish:
    jobs:
      - build:
          filters:
            <<: *filters_prerelease_build
      - test:
          filters:
            <<: *filters_prerelease_build
          requires:
            - build
      - lint:
          filters:
            <<: *filters_prerelease_build
          requires:
            - build
      - prepublish:
          context:
            - npm-publish-token
            - npm-publish-token
          filters:
            <<: *filters_prerelease_build
          requires:
            - lint
            - test

  nightly:
    triggers:
      - schedule:
          cron: '0 0 * * *'
          filters:
            <<: *filters_only_main
    jobs:
      - build:
          context: next-nightly-build
      - test:
          requires:
            - build
          context: next-nightly-build

  # Prior to producing a development orb (which requires credentials) basic validation, linting, and even unit testing can be performed.
  # This workflow will run on every commit
  orb-test-pack:
    jobs:
      - orb-tools/lint: # Lint Yaml files
          lint-dir: orb
      - orb-tools/pack: # Pack orb source
          source-dir: orb/src
      # Publish development version(s) of the orb.
      - orb-tools/publish-dev:
          context: npm-publish-token
          orb-name: financial-times/dotcom-tool-kit
          requires:
            - orb-tools/lint
            - orb-tools/pack

  orb-integration-test_deploy:
    jobs:
      # - integration-test-1
      - orb-tools/lint: # Lint Yaml files
          lint-dir: orb
          filters:
            <<: *filters_orbs_release_build
      - orb-tools/pack: # Pack orb source
          source-dir: orb/src
          filters:
            <<: *filters_orbs_release_build
      - orb-tools/publish:
          context: npm-publish-token
          attach-workspace: true
          # Strip leading 'v' from git tag
          orb-ref: financial-times/dotcom-tool-kit@${CIRCLE_TAG:1}
          filters:
            <<: *filters_orbs_release_build
          requires:
            # - integration-test-1
            - orb-tools/lint
            - orb-tools/pack
